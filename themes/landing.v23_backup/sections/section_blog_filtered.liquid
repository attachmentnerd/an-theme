{% comment %}
  Blog â€” Filtered Listing (Shared)
  - Lists blog posts filtered by tag(s)
  - Views: cards or list
  - Optional search + tag chips (client-side)
  - Data source: current_site.blog.posts_published
  Notes: Uses include "icon" only
{% endcomment %}

{% assign sid = section.id %}

<section id="blog-filtered-{{ sid }}" class="an-section an-theme">
  <div class="bf-wrap">
    {% if section.settings.heading or section.settings.subheading %}
      <header class="bf-head">
        {% if section.settings.heading %}<h2 class="bf-title">{{ section.settings.heading }}</h2>{% endif %}
        {% if section.settings.subheading %}<p class="bf-sub">{{ section.settings.subheading }}</p>{% endif %}
      </header>
    {% endif %}

    {% if section.settings.enable_search %}
    <div class="bf-controls" role="search">
      <div class="bf-search">
        <label class="sr-only" for="bf-search-{{ sid }}">Search articles</label>
        <input id="bf-search-{{ sid }}" type="search" placeholder="{{ section.settings.search_placeholder }}" autocomplete="off" />
        <div class="bf-search-ico" aria-hidden="true">{% include "icon", icon: 'search', size: 18, color: 'currentColor', aria_label: '' %}</div>
      </div>
      {% if section.settings.show_tag_chips %}<div class="bf-chips" id="bf-chips-{{ sid }}" aria-label="Filters"></div>{% endif %}
    </div>
    {% endif %}

    {% assign view = section.settings.view | default: 'cards' %}

    {% assign group_mode = section.settings.group_by_tag | default: false %}
    {% if group_mode %}
    <!-- Grouped by tag (list view) -->
    <div class="bf-groups" style="gap: {{ section.settings.grid_gap }}px;">
      {%- assign include_str = section.settings.include_tags | default: '' | downcase -%}
      {%- assign exclude_str = section.settings.exclude_tags | default: '' | downcase -%}
      {%- assign required_tag = section.settings.required_tag | default: '' | downcase -%}
      {%- assign mode = section.settings.match_mode | default: 'any' -%}
      {%- assign limit = section.settings.limit | default: 12 | plus: 0 -%}
      {%- assign shown = 0 -%}
      {%- assign include_arr = include_str | split: ',' -%}
      {%- assign exclude_arr = exclude_str | split: ',' -%}

      {%- assign tag_set = '' -%}
      {% for post in current_site.blog.posts_published %}
        {%- if shown >= limit -%}{% break %}{%- endif -%}
        {%- assign tags = post.tags | join: ',' | downcase -%}
        {%- assign ok = true -%}
        {%- if required_tag != '' -%}
          {%- unless tags contains required_tag -%}{%- assign ok = false -%}{%- endunless -%}
        {%- endif -%}
        {%- if ok and include_str != '' -%}
          {%- if mode == 'all' -%}
            {%- for it in include_arr -%}
              {%- assign t = it | strip -%}
              {%- if t != '' -%}{%- unless tags contains t -%}{%- assign ok = false -%}{%- endunless -%}{%- endif -%}
            {%- endfor -%}
          {%- else -%}
            {%- assign hit_any = false -%}
            {%- for it in include_arr -%}
              {%- assign t = it | strip -%}
              {%- if t != '' and tags contains t -%}{%- assign hit_any = true -%}{%- endif -%}
            {%- endfor -%}
            {%- if hit_any == false -%}{%- assign ok = false -%}{%- endif -%}
          {%- endif -%}
        {%- endif -%}
        {%- if ok and exclude_str != '' -%}
          {%- for et in exclude_arr -%}
            {%- assign t = et | strip -%}
            {%- if t != '' and tags contains t -%}{%- assign ok = false -%}{%- endif -%}
          {%- endfor -%}
        {%- endif -%}
        {%- if ok == false -%}{% continue %}{%- endif -%}
        {%- for tg in post.tags -%}
          {%- assign t_cmp = tg | downcase | strip -%}
          {%- assign key = '|' | append: t_cmp | append: '|' -%}
          {%- unless tag_set contains key -%}{%- assign tag_set = tag_set | append: key -%}{%- endunless -%}
        {%- endfor -%}
      {% endfor %}

      {%- assign discovered = tag_set | split: '|' | sort -%}
      {%- assign order_raw = section.settings.group_tags_order | default: '' -%}
      {%- assign order_arr = order_raw | downcase | split: ',' -%}
      {%- assign ordered = '' -%}
      {% if order_raw != '' %}
        {%- for o in order_arr -%}
          {%- assign t = o | strip -%}
          {%- if t != '' -%}
            {%- assign key = '|' | append: t | append: '|' -%}
            {%- if tag_set contains key -%}{%- assign ordered = ordered | append: key -%}{%- endif -%}
          {%- endif -%}
        {%- endfor -%}
        {%- assign group_tags = ordered | split: '|' -%}
      {% else %}
        {%- assign group_tags = discovered -%}
      {% endif %}

      {% for gtag in group_tags %}
        {% assign g = gtag | strip %}
        {% if g == '' %}{% continue %}{% endif %}
        {%- assign gcount = 0 -%}
        {% for post in current_site.blog.posts_published %}
          {%- if shown >= limit -%}{% break %}{%- endif -%}
          {%- assign tags = post.tags | join: ',' | downcase -%}
          {%- assign ok = true -%}
          {%- if required_tag != '' -%}{%- unless tags contains required_tag -%}{%- assign ok = false -%}{%- endunless -%}{%- endif -%}
          {%- if ok and include_str != '' -%}
            {%- if mode == 'all' -%}
              {%- for it in include_arr -%}{%- assign t = it | strip -%}{%- if t != '' -%}{%- unless tags contains t -%}{%- assign ok = false -%}{%- endunless -%}{%- endif -%}{%- endfor -%}
            {%- else -%}
              {%- assign hit_any = false -%}
              {%- for it in include_arr -%}{%- assign t = it | strip -%}{%- if t != '' and tags contains t -%}{%- assign hit_any = true -%}{%- endif -%}{%- endfor -%}
              {%- if hit_any == false -%}{%- assign ok = false -%}{%- endif -%}
            {%- endif -%}
          {%- endif -%}
          {%- if ok and exclude_str != '' -%}
            {%- for et in exclude_arr -%}{%- assign t = et | strip -%}{%- if t != '' and tags contains t -%}{%- assign ok = false -%}{%- endif -%}{%- endfor -%}
          {%- endif -%}
          {%- unless ok -%}{% continue %}{%- endunless -%}
          {%- unless tags contains g -%}{% continue %}{%- endunless -%}
          {%- assign gcount = gcount | plus: 1 -%}
        {% endfor %}
        {% if gcount == 0 %}{% continue %}{% endif %}

        <div class="bf-group" data-group="{{ g }}">
          {% assign g_label_raw = g | split: ',' | first | strip %}
          {% assign __g_label = '' %}
          {% assign _lbl_lines = section.settings.tag_label_map | default: '' | newline_to_br | split: '<br />' %}
          {% assign g_cmp = g_label_raw | downcase %}
          {% for m in _lbl_lines %}
            {% assign m1 = m | strip %}
            {% if m1 != '' %}
              {% assign parts = m1 | split: '|' %}
              {% assign mtag = parts[0] | strip | downcase %}
              {% assign mval = parts[1] | strip %}
              {% if mtag == g_cmp %}{% assign __g_label = mval %}{% endif %}
            {% endif %}
          {% endfor %}
          {% assign g_text = __g_label | default: g_label_raw %}
          <h3 class="bf-group-title">
            {{ g_text }}
            {% if section.settings.group_show_counts %}<span class="bf-group-count">({{ gcount }})</span>{% endif %}
          </h3>
          <div class="bf-list bf-list--list" style="gap: {{ section.settings.grid_gap }}px;">
            {% for post in current_site.blog.posts_published %}
              {%- if shown >= limit -%}{% break %}{%- endif -%}
              {%- assign tags = post.tags | join: ',' | downcase -%}
              {%- assign ok = true -%}
              {%- if required_tag != '' -%}{%- unless tags contains required_tag -%}{%- assign ok = false -%}{%- endunless -%}{%- endif -%}
              {%- if ok and include_str != '' -%}
                {%- if mode == 'all' -%}
                  {%- for it in include_arr -%}{%- assign t = it | strip -%}{%- if t != '' -%}{%- unless tags contains t -%}{%- assign ok = false -%}{%- endunless -%}{%- endif -%}{%- endfor -%}
                {%- else -%}
                  {%- assign hit_any = false -%}
                  {%- for it in include_arr -%}{%- assign t = it | strip -%}{%- if t != '' and tags contains t -%}{%- assign hit_any = true -%}{%- endif -%}{%- endfor -%}
                  {%- if hit_any == false -%}{%- assign ok = false -%}{%- endif -%}
                {%- endif -%}
              {%- endif -%}
              {%- if ok and exclude_str != '' -%}
                {%- for et in exclude_arr -%}{%- assign t = et | strip -%}{%- if t != '' and tags contains t -%}{%- assign ok = false -%}{%- endif -%}{%- endfor -%}
              {%- endif -%}
              {%- unless ok -%}{% continue %}{%- endunless -%}
              {%- unless tags contains g -%}{% continue %}{%- endunless -%}
              {%- assign shown = shown | plus: 1 -%}
              {%- assign _excerpt_len = section.settings.content_excerpt_chars | default: 280 | plus: 0 -%}
              {%- capture _search_blob -%}
                {{ post.title }}
                {% if post.tags.size > 0 %} {{ post.tags | join: ' ' }}{% endif %}
                {% if post.page_description %} {{ post.page_description }}{% endif %}
                {% if section.settings.search_in_content %}
                  {% assign _raw_content = '' %}
                  {% if post.content %}{% assign _raw_content = post.content %}{% elsif post.body %}{% assign _raw_content = post.body %}{% endif %}
                  {{ _raw_content | strip_html | strip | truncate: _excerpt_len }}
                {% endif %}
              {%- endcapture -%}
              <article class="bf-item" data-title="{{ post.title | escape }}" data-tags="{{ post.tags | join: ',' | escape }}" data-search="{{ _search_blob | strip | escape }}">
                <a class="bf-row" href="{{ post.url }}">
                  <h3 class="bf-row-title">{{ post.title }}</h3>
                  {% if post.published_at %}<span class="bf-row-meta">{{ post.published_at | date: "%b %d, %Y" }}</span>{% endif %}
                </a>
              </article>
            {% endfor %}
          </div>
        </div>
      {% endfor %}
    </div>
    {% else %}
    <div class="bf-list bf-list--{{ view }}" style="gap: {{ section.settings.grid_gap }}px;">
      {%- assign include_str = section.settings.include_tags | default: '' | downcase -%}
      {%- assign exclude_str = section.settings.exclude_tags | default: '' | downcase -%}
      {%- assign required_tag = section.settings.required_tag | default: '' | downcase -%}
      {%- assign mode = section.settings.match_mode | default: 'any' -%}
      {%- assign limit = section.settings.limit | default: 12 | plus: 0 -%}
      {%- assign shown = 0 -%}
      {%- assign include_arr = include_str | split: ',' -%}
      {%- assign exclude_arr = exclude_str | split: ',' -%}

      {% for post in current_site.blog.posts_published %}
        {%- if shown >= limit -%}{% break %}{%- endif -%}
        {%- assign tags = post.tags | join: ',' | downcase -%}
        {%- assign ok = true -%}
        {%- if required_tag != '' -%}
          {%- unless tags contains required_tag -%}
            {%- assign ok = false -%}
          {%- endunless -%}
        {%- endif -%}
        {%- if ok and include_str != '' -%}
          {%- if mode == 'all' -%}
            {%- for it in include_arr -%}
              {%- assign t = it | strip -%}
              {%- if t != '' -%}
                {%- unless tags contains t -%}{%- assign ok = false -%}{%- endunless -%}
              {%- endif -%}
            {%- endfor -%}
          {%- else -%}
            {%- assign hit_any = false -%}
            {%- for it in include_arr -%}
              {%- assign t = it | strip -%}
              {%- if t != '' and tags contains t -%}{%- assign hit_any = true -%}{%- endif -%}
            {%- endfor -%}
            {%- if hit_any == false -%}{%- assign ok = false -%}{%- endif -%}
          {%- endif -%}
        {%- endif -%}
        {%- if ok and exclude_str != '' -%}
          {%- for et in exclude_arr -%}
            {%- assign t = et | strip -%}
            {%- if t != '' and tags contains t -%}{%- assign ok = false -%}{%- endif -%}
          {%- endfor -%}
        {%- endif -%}
        {%- if ok == false -%}{% continue %}{%- endif -%}

        {%- assign shown = shown | plus: 1 -%}
        {%- assign _excerpt_len = section.settings.content_excerpt_chars | default: 280 | plus: 0 -%}
        {%- capture _search_blob -%}
          {{ post.title }}
          {% if post.tags.size > 0 %} {{ post.tags | join: ' ' }}{% endif %}
          {% if post.page_description %} {{ post.page_description }}{% endif %}
          {% if section.settings.search_in_content %}
            {% assign _raw_content = '' %}
            {% if post.content %}{% assign _raw_content = post.content %}{% elsif post.body %}{% assign _raw_content = post.body %}{% endif %}
            {{ _raw_content | strip_html | strip | truncate: _excerpt_len }}
          {% endif %}
        {%- endcapture -%}
        <article class="bf-item" data-title="{{ post.title | escape }}" data-tags="{{ post.tags | join: ',' | escape }}" data-date="{{ post.published_at }}" data-search="{{ _search_blob | strip | escape }}">
          {% if view == 'cards' %}
          <a class="bf-card" href="{{ post.url }}">
            <div class="bf-card-top">
              {% if section.settings.show_category_pill %}
                {%- assign pill = '' -%}
                {%- if required_tag != '' -%}{%- assign pill = required_tag -%}
                {%- elsif include_arr.size > 0 -%}{%- assign pill = include_arr.first | strip -%}{%- endif -%}
                {% if pill != '' %}
                  {% assign __pill_label = '' %}
                  {% assign _lbl_lines = section.settings.tag_label_map | default: '' | newline_to_br | split: '<br />' %}
                  {% assign __pill_cmp = pill | downcase %}
                  {% for m in _lbl_lines %}
                    {% assign m1 = m | strip %}
                    {% if m1 != '' %}
                      {% assign parts = m1 | split: '|' %}
                      {% assign mtag = parts[0] | strip | downcase %}
                      {% assign mval = parts[1] | strip %}
                      {% if mtag == __pill_cmp %}{% assign __pill_label = mval %}{% endif %}
                    {% endif %}
                  {% endfor %}
                  {% assign __pill_bg = '' %}
                  {% assign __lines = section.settings.pill_color_map | default: '' | newline_to_br | split: '<br />' %}
                  {% assign __pill_cmp = pill | downcase %}
                  {% for m in __lines %}
                    {% assign m1 = m | strip %}
                    {% if m1 != '' %}
                      {% assign parts = m1 | split: '|' %}
                      {% assign mtag = parts[0] | strip | downcase %}
                      {% assign mcol = parts[1] | strip %}
                      {% if mtag == __pill_cmp %}{% assign __pill_bg = mcol %}{% endif %}
                    {% endif %}
                  {% endfor %}
                  <span class="bf-pill" {% if __pill_bg != '' %}style="background: {{ __pill_bg }}; border-color: {{ __pill_bg }}; color: {{ section.settings.pill_text_on_color | default: '#111111' }}"{% endif %}>{{ __pill_label | default: pill }}</span>
                {% endif %}
              {% endif %}
              <span class="bf-caret" aria-hidden="true">â€º</span>
            </div>
            <h3 class="bf-card-title">{{ post.title }}</h3>
            {% if section.settings.show_all_tag_pills %}
              {% assign _ex_raw = section.settings.pill_exclude | default: '' | downcase %}
              {% assign _ex_arr = _ex_raw | split: ',' %}
              {% assign _max = section.settings.pill_max | default: 0 | plus: 0 %}
              {% assign _count = 0 %}
              {% assign _case = section.settings.pill_case | default: 'original' %}
              <div class="bf-pills">
                {% for tg in post.tags %}
                  {% assign t_raw = tg | strip %}
                  {% assign t_cmp = t_raw | downcase %}
                  {% assign skip = false %}
                  {% for x in _ex_arr %}
                    {% assign x1 = x | strip %}
                    {% if x1 != '' and t_cmp == x1 %}{% assign skip = true %}{% endif %}
                  {% endfor %}
                  {% if skip %}{% continue %}{% endif %}
                  {% if _max > 0 and _count >= _max %}{% break %}{% endif %}
                  {% assign _count = _count | plus: 1 %}
                  {% assign _lbl_txt = '' %}
                  {% assign _map_label_lines = section.settings.tag_label_map | default: '' | newline_to_br | split: '<br />' %}
                  {% for m in _map_label_lines %}
                    {% assign m1 = m | strip %}
                    {% if m1 != '' %}
                      {% assign parts = m1 | split: '|' %}
                      {% assign mtag = parts[0] | strip | downcase %}
                      {% assign mval = parts[1] | strip %}
                      {% if mtag == t_cmp %}{% assign _lbl_txt = mval %}{% endif %}
                    {% endif %}
                  {% endfor %}
                  {% if _lbl_txt == '' %}
                    {% capture pill_text %}{% if _case == 'lower' %}{{ t_raw | downcase }}{% elsif _case == 'upper' %}{{ t_raw | upcase }}{% else %}{{ t_raw }}{% endif %}{% endcapture %}
                  {% else %}
                    {% assign pill_text = _lbl_txt %}
                  {% endif %}
                  {% assign _bg = '' %}
                  {% assign _map_lines = section.settings.pill_color_map | default: '' | newline_to_br | split: '<br />' %}
                  {% for m in _map_lines %}
                    {% assign m1 = m | strip %}
                    {% if m1 != '' %}
                      {% assign parts = m1 | split: '|' %}
                      {% assign mtag = parts[0] | strip | downcase %}
                      {% assign mcol = parts[1] | strip %}
                      {% if mtag == t_cmp %}{% assign _bg = mcol %}{% endif %}
                    {% endif %}
                  {% endfor %}
                  <span class="bf-pill" {% if _bg != '' %}style="background: {{ _bg }}; border-color: {{ _bg }}; color: {{ section.settings.pill_text_on_color | default: '#111111' }}"{% endif %}>{{ pill_text }}</span>
                {% endfor %}
              </div>
            {% endif %}
            {% if post.page_description %}<p class="bf-card-desc">{{ post.page_description }}</p>{% endif %}
          </a>
          {% else %}
          <a class="bf-row" href="{{ post.url }}">
            <h3 class="bf-row-title">{{ post.title }}</h3>
            {% if post.published_at %}<span class="bf-row-meta">{{ post.published_at | date: "%b %d, %Y" }}</span>{% endif %}
            {% if section.settings.show_all_tag_pills and post.tags.size > 0 %}
              {% assign _ex_raw = section.settings.pill_exclude | default: '' | downcase %}
              {% assign _ex_arr = _ex_raw | split: ',' %}
              {% assign _max = section.settings.pill_max | default: 0 | plus: 0 %}
              {% assign _count = 0 %}
              {% assign _case = section.settings.pill_case | default: 'original' %}
              <div class="bf-row-pills">
                {% for tg in post.tags %}
                  {% assign t_raw = tg | strip %}
                  {% assign t_cmp = t_raw | downcase %}
                  {% assign skip = false %}
                  {% for x in _ex_arr %}
                    {% assign x1 = x | strip %}
                    {% if x1 != '' and t_cmp == x1 %}{% assign skip = true %}{% endif %}
                  {% endfor %}
                  {% if skip %}{% continue %}{% endif %}
                  {% if _max > 0 and _count >= _max %}{% break %}{% endif %}
                  {% assign _count = _count | plus: 1 %}
                  {% assign _lbl_txt = '' %}
                  {% assign _map_label_lines = section.settings.tag_label_map | default: '' | newline_to_br | split: '<br />' %}
                  {% for m in _map_label_lines %}
                    {% assign m1 = m | strip %}
                    {% if m1 != '' %}
                      {% assign parts = m1 | split: '|' %}
                      {% assign mtag = parts[0] | strip | downcase %}
                      {% assign mval = parts[1] | strip %}
                      {% if mtag == t_cmp %}{% assign _lbl_txt = mval %}{% endif %}
                    {% endif %}
                  {% endfor %}
                  {% if _lbl_txt == '' %}
                    {% capture pill_text %}{% if _case == 'lower' %}{{ t_raw | downcase }}{% elsif _case == 'upper' %}{{ t_raw | upcase }}{% else %}{{ t_raw }}{% endif %}{% endcapture %}
                  {% else %}
                    {% assign pill_text = _lbl_txt %}
                  {% endif %}
                  {% assign _bg = '' %}
                  {% assign _map_lines = section.settings.pill_color_map | default: '' | newline_to_br | split: '<br />' %}
                  {% for m in _map_lines %}
                    {% assign m1 = m | strip %}
                    {% if m1 != '' %}
                      {% assign parts = m1 | split: '|' %}
                      {% assign mtag = parts[0] | strip | downcase %}
                      {% assign mcol = parts[1] | strip %}
                      {% if mtag == t_cmp %}{% assign _bg = mcol %}{% endif %}
                    {% endif %}
                  {% endfor %}
                  <span class="bf-pill" {% if _bg != '' %}style="background: {{ _bg }}; border-color: {{ _bg }}; color: {{ section.settings.pill_text_on_color | default: '#111111' }}"{% endif %}>{{ pill_text }}</span>
                {% endfor %}
              </div>
            {% endif %}
          </a>
          {% endif %}
        </article>
      {% endfor %}
    </div>
    {% endif %}
  </div>

  <style>
    /* Unified type scale for this section */
    #blog-filtered-{{ sid }}{--bf-title-size:var(--fs-h4); --bf-title-weight:var(--fw-bold); --bf-sub-size:var(--fs-body); --bf-group-title-size:var(--fs-h5); --bf-group-title-weight:var(--fw-bold); --bf-item-title-size:var(--fs-body); --bf-item-title-weight:var(--fw-semibold)}
    #blog-filtered-{{ sid }} .bf-wrap{max-width:1100px; margin:0 auto; padding:32px 18px}
    #blog-filtered-{{ sid }} .bf-title{margin:0 0 6px; color:var(--c-ink-900); font-weight:var(--bf-title-weight); font-size:var(--bf-title-size); line-height:1.3}
    #blog-filtered-{{ sid }} .bf-sub{color:var(--c-ink-700); font-size:var(--bf-sub-size); line-height:1.6}
    #blog-filtered-{{ sid }} .bf-controls{display:flex; gap:10px; flex-wrap:wrap; align-items:center; margin:12px 0 16px}
    #blog-filtered-{{ sid }} .bf-search{position:relative; flex:1 1 360px}
    #blog-filtered-{{ sid }} .bf-search input{width:100%; appearance:none; border:1px solid var(--c-ink-100); background:#fff; color:var(--c-ink-800); padding:10px 34px 10px 12px; border-radius:10px; transition:box-shadow .2s, border-color .2s}
    #blog-filtered-{{ sid }} .bf-search input:focus{outline:none; border-color:var(--c-ink-200); box-shadow:0 0 0 3px rgba(59,130,246,.25)}
    #blog-filtered-{{ sid }} .bf-search-ico{position:absolute; right:10px; top:50%; transform:translateY(-50%); color:var(--c-ink-500)}
    #blog-filtered-{{ sid }} .bf-chips{display:flex; gap:8px; flex-wrap:wrap}
    #blog-filtered-{{ sid }} .bf-chip{display:inline-flex; gap:6px; align-items:center; background:var(--c-ink-050, #f6f7fb); color:var(--c-ink-700); border:1px solid var(--c-ink-100); padding:6px 10px; border-radius:9999px; font-size:.9rem; cursor:pointer; transition:background .2s, color .2s, border-color .2s, box-shadow .2s}
    #blog-filtered-{{ sid }} .bf-chip:hover{background:#fff; border-color:var(--c-ink-150)}
    #blog-filtered-{{ sid }} .bf-chip:focus{outline:none; box-shadow:0 0 0 3px rgba(59,130,246,.25)}
    #blog-filtered-{{ sid }} .bf-chip.is-active{background:var(--g-brand); color:#fff; border-color:transparent}

    #blog-filtered-{{ sid }} .bf-list{display:grid}
    #blog-filtered-{{ sid }} .bf-groups{display:grid}
    #blog-filtered-{{ sid }} .bf-group{margin:10px 0}
    #blog-filtered-{{ sid }} .bf-group-title{display:flex; align-items:center; justify-content:space-between; margin:16px 0 8px; padding-bottom:4px; font-weight:var(--bf-group-title-weight); font-size:var(--bf-group-title-size); line-height:1.35; color:var(--c-ink-900); border-bottom:1px solid var(--c-ink-075)}
    #blog-filtered-{{ sid }} .bf-list--cards{grid-template-columns:repeat(3, minmax(0,1fr))}
    @media (max-width: 900px){ #blog-filtered-{{ sid }} .bf-list--cards{grid-template-columns:1fr 1fr} }
    @media (max-width: 600px){ #blog-filtered-{{ sid }} .bf-list--cards{grid-template-columns:1fr} }
    #blog-filtered-{{ sid }} .bf-list--list{grid-template-columns:1fr}

    #blog-filtered-{{ sid }} .bf-card{display:block; padding:16px; border:1px solid var(--c-ink-100); background:#fff; border-radius:14px; color:inherit; text-decoration:none; box-shadow:0 6px 18px rgba(0,0,0,.05); transition:box-shadow .2s, transform .2s, border-color .2s}
    #blog-filtered-{{ sid }} .bf-card:hover{border-color:var(--c-ink-150); box-shadow:0 10px 24px rgba(0,0,0,.08); transform:translateY(-2px)}
    #blog-filtered-{{ sid }} .bf-card-top{display:flex; align-items:center; justify-content:space-between}
    #blog-filtered-{{ sid }} .bf-pill{display:inline-block; padding:6px 10px; border-radius:9999px; background:#fff; border:1px solid var(--c-ink-150); color:var(--c-ink-700); font-size:.85rem; font-weight:700}
    #blog-filtered-{{ sid }} .bf-card-title{margin:10px 0 6px; font-weight:var(--bf-item-title-weight); color:var(--c-ink-900); font-size:var(--bf-item-title-size); line-height:1.35}
    #blog-filtered-{{ sid }} .bf-pills{display:flex; gap:8px; flex-wrap:wrap; margin:6px 0 0}
    #blog-filtered-{{ sid }} .bf-card-desc{margin:0; color:var(--c-ink-600)}
    #blog-filtered-{{ sid }} .bf-caret{color:var(--c-ink-300)}

    #blog-filtered-{{ sid }} .bf-row{display:flex; align-items:center; justify-content:space-between; padding:12px 8px; border-bottom:1px solid var(--c-ink-075); color:inherit; text-decoration:none; transition:background .15s}
    #blog-filtered-{{ sid }} .bf-row:hover{background:var(--c-ink-050)}
    #blog-filtered-{{ sid }} .bf-row-title{margin:0; font-weight:var(--bf-item-title-weight); color:var(--c-ink-900); font-size:var(--bf-item-title-size); line-height:1.35}
    #blog-filtered-{{ sid }} .bf-row-meta{color:var(--c-ink-500)}
    #blog-filtered-{{ sid }} .bf-row-pills{display:flex; gap:8px; flex-wrap:wrap; margin-left:auto; margin-top:6px}

    .sr-only{position:absolute; width:1px; height:1px; padding:0; margin:-1px; overflow:hidden; clip:rect(0,0,0,0); white-space:nowrap; border:0}
  </style>

  <script>
    (function(){
      var root = document.getElementById('blog-filtered-{{ sid }}');
      if(!root || root.dataset.inited==='1') return; root.dataset.inited='1';
      var searchInput = root.querySelector('#bf-search-{{ sid }}');
      var chipsWrap = root.querySelector('#bf-chips-{{ sid }}');
      var items = [].slice.call(root.querySelectorAll('.bf-item'));
      var activeTag = '';
      function norm(s){ return (s||'').toLowerCase(); }
      // Build label map from settings (tag|Label per line)
      var labelMap = {};
      {% assign _label_lines = section.settings.tag_label_map | default: '' | newline_to_br | split: '<br />' %}
      {% for m in _label_lines %}
        {% assign m1 = m | strip %}
        {% if m1 != '' %}
          {% assign parts = m1 | split: '|' %}
          {% assign mtag = parts[0] | strip | downcase %}
          {% assign mval = parts[1] | strip %}
          labelMap["{{ mtag | escape }}"] = "{{ mval | escape }}";
        {% endif %}
      {% endfor %}
      function getLabel(tag){ var k = norm(tag); return labelMap[k] || tag; }
      // URL param keys (section-specific and generic fallbacks)
      var sid = '{{ sid }}';
      var Q_KEY = 'bf_q_'+sid;
      var TAG_KEY = 'bf_tag_'+sid;
      function readInitialState(){
        try{
          var url = new URL(window.location.href);
          var params = url.searchParams;
          var q = params.get(Q_KEY) || params.get('q') || '';
          var tg = params.get(TAG_KEY) || params.get('tag') || '';
          // Hash fallback like #tag=program&q=search
          if(!tg && url.hash && url.hash.indexOf('tag=')>-1){
            var hashParams = new URLSearchParams(url.hash.replace(/^#/, ''));
            tg = hashParams.get('tag') || tg;
          }
          if(!q && url.hash && url.hash.indexOf('q=')>-1){
            var hashParams2 = new URLSearchParams(url.hash.replace(/^#/, ''));
            q = hashParams2.get('q') || q;
          }
          if(searchInput && q){ searchInput.value = q; }
          if(tg){ activeTag = norm(tg); }
        }catch(e){}
      }
      function updateURL(){
        try{
          var url = new URL(window.location.href);
          var params = url.searchParams;
          var qVal = searchInput ? searchInput.value.trim() : '';
          if(qVal){ params.set(Q_KEY, qVal); } else { params.delete(Q_KEY); }
          if(activeTag){ params.set(TAG_KEY, activeTag); } else { params.delete(TAG_KEY); }
          // Keep generic fallbacks tidy too
          params.delete('q'); params.delete('tag');
          url.search = params.toString();
          history.replaceState(null, '', url.toString());
        }catch(e){}
      }
      function applyFilters(){
        var q = norm(searchInput ? searchInput.value : '');
        items.forEach(function(el){
          var title = norm(el.getAttribute('data-title'));
          var tags = norm(el.getAttribute('data-tags'));
          var hay = norm(el.getAttribute('data-search') || el.textContent || '');
          var hitQ = !q || title.indexOf(q)>-1 || hay.indexOf(q)>-1;
          var hitTag = !activeTag || (tags.split(',').map(function(s){return s.trim();}).indexOf(activeTag)>-1);
          el.style.display = (hitQ && hitTag) ? '' : 'none';
        });
        // Hide empty groups when grouped
        var groups = [].slice.call(root.querySelectorAll('.bf-group'));
        groups.forEach(function(g){
          var visible = g.querySelectorAll('.bf-item:not([style*="display: none"])').length;
          g.style.display = visible ? '' : 'none';
        });
      }
      if(searchInput){ searchInput.addEventListener('input', function(){ applyFilters(); updateURL(); }); }
      function renderChips(){
        if(!chipsWrap) return;
        var set = Object.create(null);
        items.forEach(function(n){ (n.getAttribute('data-tags')||'').split(',').forEach(function(t){ t=t.trim(); if(t){ set[t]=true; }}); });
        var tags = Object.keys(set).sort(); chipsWrap.innerHTML='';
        if(tags.length===0) return;
        var clear=document.createElement('button'); clear.type='button'; clear.className='bf-chip'+(activeTag===''?' is-active':''); clear.textContent='All'; clear.setAttribute('aria-pressed', activeTag===''?'true':'false'); clear.addEventListener('click', function(){ activeTag=''; renderChips(); applyFilters(); updateURL(); }); chipsWrap.appendChild(clear);
        tags.forEach(function(tag){ var b=document.createElement('button'); b.type='button'; b.className='bf-chip'+(activeTag===tag?' is-active':''); b.textContent=getLabel(tag); b.setAttribute('data-tag', tag); b.setAttribute('aria-pressed', activeTag===tag?'true':'false'); b.addEventListener('click', function(){ var value=b.getAttribute('data-tag'); activeTag = (activeTag===value?'':value); renderChips(); applyFilters(); updateURL(); }); chipsWrap.appendChild(b); });
      }
      // Initialize from URL, then render UI
      readInitialState();
      renderChips();
      applyFilters();
    })();
  </script>
</section>

{% schema %}
{
  "name": "Blog â€” Filtered Listing",
  "elements": [
    {"type":"text","id":"heading","label":"Heading","default":"Latest Articles"},
    {"type":"textarea","id":"subheading","label":"Subheading","default":"Browse articles filtered by the tags you choose."},
    {"type":"text","id":"required_tag","label":"Required tag (must include)","default":""},
    {"type":"text","id":"include_tags","label":"Include tags (comma-separated)","default":""},
    {"type":"text","id":"exclude_tags","label":"Exclude tags (comma-separated)","default":""},
    {"type":"select","id":"match_mode","label":"Include tags match","default":"any","options":[{"label":"Any","value":"any"},{"label":"All","value":"all"}]},
    {"type":"range","id":"limit","label":"Max posts","min":1,"max":50,"step":1,"default":12},
    {"type":"checkbox","id":"group_by_tag","label":"Group by tag (list view)","default":false},
    {"type":"text","id":"group_tags_order","label":"Group order (tags, comma-separated)","default":""},
    {"type":"checkbox","id":"group_show_counts","label":"Show group counts","default":true},
    {"type":"select","id":"view","label":"View","default":"cards","options":[{"label":"Cards","value":"cards"},{"label":"List","value":"list"}]},
    {"type":"checkbox","id":"show_category_pill","label":"Show pill with selected tag","default":true},
    {"type":"checkbox","id":"show_all_tag_pills","label":"Show all post tags as pills","default":true},
    {"type":"range","id":"pill_max","label":"Max pills per post (0 = unlimited)","min":0,"max":10,"step":1,"default":4},
    {"type":"text","id":"pill_exclude","label":"Exclude pills (comma-separated)","default":""},
    {"type":"textarea","id":"pill_color_map","label":"Tag â†’ Color map (one per line: tag|#hex)","default":"getting started|#EEF2FF\ntechnical support|#FFF3E8\nprivacy & security|#FDECEC"},
    {"type":"color","id":"pill_text_on_color","label":"Pill text color when colored","default":"#111111"},
    {"type":"select","id":"pill_case","label":"Pill text case","default":"original","options":[{"label":"Original","value":"original"},{"label":"lowercase","value":"lower"},{"label":"UPPERCASE","value":"upper"}]},
    {"type":"textarea","id":"tag_label_map","label":"Tag â†’ Label map (one per line: tag|Label)","default":"qanda|Q&A"},
    {"type":"checkbox","id":"search_in_content","label":"Search in article content (client-side excerpt)","default":false},
    {"type":"range","id":"content_excerpt_chars","label":"Content excerpt characters","min":80,"max":1000,"step":20,"default":280},
    {"type":"checkbox","id":"enable_search","label":"Enable search","default":true},
    {"type":"checkbox","id":"show_tag_chips","label":"Show tag filter chips","default":true},
    {"type":"text","id":"search_placeholder","label":"Search placeholder","default":"Search articles"},
    {"type":"range","id":"grid_gap","label":"Grid/list gap","min":8,"max":32,"step":2,"unit":"px","default":14}
  ],
  "blocks": [],
  "max_blocks": 0,
  "presets": [
    {"name":"Blog â€” Filtered Listing","category":"Content"}
  ]
}
{% endschema %}
