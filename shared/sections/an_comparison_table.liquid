{% comment %}
  AN Comparison Table Section
  - Responsive comparison table
  - Feature checkmarks
  - Highlighted recommended column
  - Mobile-friendly accordion view
  - Sticky headers
{% endcomment %}

<section class="an-comparison py-5" style="background: {{ section.settings.background_color }};">
  <div class="container">
    <!-- Section Header -->
    {% if section.settings.heading != blank or section.settings.subheading != blank %}
      <div class="text-center mb-5 animate-fade-up">
        {% if section.settings.heading != blank %}
          <h2 style="font-size: var(--fs-h1); color: var(--c-ink-900); font-weight: 500; margin-bottom: 1rem;">
            {{ section.settings.heading }}
          </h2>
        {% endif %}
        {% if section.settings.subheading != blank %}
          <p style="font-size: var(--fs-body-lg); color: var(--c-ink-700); max-width: 700px; margin: 0 auto;">
            {{ section.settings.subheading }}
          </p>
        {% endif %}
      </div>
    {% endif %}

    <!-- Desktop Table View -->
    <div class="an-comparison__table-wrapper animate-fade-up d-none d-lg-block">
      <table class="an-comparison__table">
        <thead>
          <tr>
            <th class="an-comparison__feature-col">
              <!-- Empty corner cell -->
            </th>
            {% for block in section.blocks %}
              {% if block.type == 'plan' %}
                <th class="an-comparison__plan-header {% if block.settings.recommended %}an-comparison__plan-header--recommended{% endif %}" data-column="{{ forloop.index }}">
                  <button class="an-comparison__plan-button" aria-label="Select {{ block.settings.name }} plan" data-column="{{ forloop.index }}">
                    {% if block.settings.recommended %}
                      <div class="an-comparison__badge">{{ block.settings.badge_text }}</div>
                    {% endif %}
                    <h3 class="an-comparison__plan-name">{{ block.settings.name }}</h3>
                  <div class="an-comparison__plan-price">
                    <span class="an-comparison__price-amount">${{ block.settings.price }}</span>
                    {% if block.settings.price_period != blank %}
                      <span class="an-comparison__price-period">{{ block.settings.price_period }}</span>
                    {% endif %}
                  </div>
                  {% if block.settings.description != blank %}
                    <p class="an-comparison__plan-description">{{ block.settings.description }}</p>
                  {% endif %}
                    <a href="{{ block.settings.cta_link }}" class="btn {% if block.settings.recommended %}btn-primary-modern{% else %}btn-secondary-modern{% endif %} btn-sm">
                      {{ block.settings.cta_text }}
                    </a>
                  </button>
                </th>
              {% endif %}
            {% endfor %}
          </tr>
        </thead>
        <tbody>
          {% for feature_block in section.blocks %}
            {% if feature_block.type == 'feature_category' %}
              <tr class="an-comparison__category-row">
                <td colspan="100%">
                  <h4 class="an-comparison__category-title">{{ feature_block.settings.category_name }}</h4>
                </td>
              </tr>
            {% elsif feature_block.type == 'feature' %}
              <tr class="an-comparison__feature-row">
                <td class="an-comparison__feature-name">
                  {{ feature_block.settings.feature_name }}
                  {% if feature_block.settings.tooltip != blank or feature_block.settings.tooltip_image != blank or feature_block.settings.tooltip_video != blank %}
                    <button class="an-comparison__tooltip" aria-label="More info about {{ feature_block.settings.feature_name }}">
                      <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-width="1.5"/>
                        <path d="M8 11V8M8 5H8.01" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                      </svg>
                      <div class="an-comparison__tooltip-content">
                        {% if feature_block.settings.tooltip_image != blank %}
                          <img src="{{ feature_block.settings.tooltip_image | image_picker_url: '300x200' }}" alt="{{ feature_block.settings.feature_name }}" class="an-comparison__tooltip-image">
                        {% endif %}
                        {% if feature_block.settings.tooltip != blank %}
                          <p class="an-comparison__tooltip-text">{{ feature_block.settings.tooltip }}</p>
                        {% endif %}
                        {% if feature_block.settings.tooltip_video != blank %}
                          <a href="{{ feature_block.settings.tooltip_video }}" class="an-comparison__tooltip-video" target="_blank" rel="noopener">
                            <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                              <circle cx="10" cy="10" r="9" stroke="currentColor" stroke-width="1.5"/>
                              <path d="M8 7L13 10L8 13V7Z" fill="currentColor"/>
                            </svg>
                            <span>Watch explanation</span>
                          </a>
                        {% endif %}
                      </div>
                    </button>
                  {% endif %}
                </td>
                {% assign plan_features = feature_block.settings.plan_values | split: ',' %}
                {% for value in plan_features %}
                  <td class="an-comparison__feature-value" data-column="{{ forloop.index }}">
                    {% if value contains 'check' %}
                      <svg class="an-comparison__check" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <circle cx="12" cy="12" r="10" fill="var(--c-accent-teal)" opacity="0.2"/>
                        <path d="M16 9L10.5 14.5L8 12" stroke="var(--c-accent-teal)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                      </svg>
                    {% elsif value contains 'x' %}
                      <svg class="an-comparison__x" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <circle cx="12" cy="12" r="10" fill="var(--c-ink-200)" opacity="0.3"/>
                        <path d="M15 9L9 15M9 9L15 15" stroke="var(--c-ink-400)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                      </svg>
                    {% else %}
                      <span class="an-comparison__text-value">{{ value | strip }}</span>
                    {% endif %}
                  </td>
                {% endfor %}
              </tr>
            {% endif %}
          {% endfor %}
        </tbody>
      </table>
    </div>

    <!-- Mobile Accordion View -->
    <div class="an-comparison__mobile d-lg-none">
      {% for block in section.blocks %}
        {% if block.type == 'plan' %}
          <div class="an-comparison__mobile-plan animate-fade-up {% if block.settings.recommended %}an-comparison__mobile-plan--recommended{% endif %}">
            {% if block.settings.recommended %}
              <div class="an-comparison__badge">{{ block.settings.badge_text }}</div>
            {% endif %}
            
            <div class="an-comparison__mobile-header">
              <h3 class="an-comparison__plan-name">{{ block.settings.name }}</h3>
              <div class="an-comparison__plan-price">
                <span class="an-comparison__price-amount">${{ block.settings.price }}</span>
                {% if block.settings.price_period != blank %}
                  <span class="an-comparison__price-period">{{ block.settings.price_period }}</span>
                {% endif %}
              </div>
              {% if block.settings.description != blank %}
                <p class="an-comparison__plan-description">{{ block.settings.description }}</p>
              {% endif %}
            </div>

            <div class="an-comparison__mobile-features">
              {% assign plan_index = forloop.index0 %}
              {% assign current_category = '' %}
              
              {% for feature_block in section.blocks %}
                {% if feature_block.type == 'feature_category' %}
                  {% assign current_category = feature_block.settings.category_name %}
                  <h4 class="an-comparison__mobile-category">{{ current_category }}</h4>
                {% elsif feature_block.type == 'feature' %}
                  {% assign plan_features = feature_block.settings.plan_values | split: ',' %}
                  {% assign feature_value = plan_features[plan_index] | strip %}
                  
                  <div class="an-comparison__mobile-feature">
                    <span class="an-comparison__mobile-feature-name">
                      {{ feature_block.settings.feature_name }}
                    </span>
                    <span class="an-comparison__mobile-feature-value">
                      {% if feature_value contains 'check' %}
                        <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <circle cx="10" cy="10" r="9" fill="var(--c-accent-teal)" opacity="0.2"/>
                          <path d="M14 7L8.5 12.5L6 10" stroke="var(--c-accent-teal)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                      {% elsif feature_value contains 'x' %}
                        <span class="text-muted">â€”</span>
                      {% else %}
                        {{ feature_value }}
                      {% endif %}
                    </span>
                  </div>
                {% endif %}
              {% endfor %}
            </div>

            <div class="an-comparison__mobile-cta">
              <a href="{{ block.settings.cta_link }}" class="btn {% if block.settings.recommended %}btn-primary-modern{% else %}btn-secondary-modern{% endif %} w-100">
                {{ block.settings.cta_text }}
              </a>
            </div>
          </div>
        {% endif %}
      {% endfor %}
    </div>

    <!-- Bottom Note -->
    {% if section.settings.bottom_note != blank %}
      <div class="text-center mt-4 animate-fade-up">
        <p class="an-comparison__note">
          {{ section.settings.bottom_note }}
        </p>
      </div>
    {% endif %}
  </div>
</section>

<style>
  /* Desktop Table Styles */
  .an-comparison__table-wrapper {
    overflow-x: auto;
    border-radius: 16px;
    box-shadow: 0 4px 12px rgba(26, 45, 78, 0.08);
  }

  .an-comparison__table {
    width: 100%;
    background: white;
    border-collapse: separate;
    border-spacing: 0;
  }

  .an-comparison__table th,
  .an-comparison__table td {
    padding: 1.5rem;
    text-align: center;
    border-right: 1px solid var(--c-ink-100);
    border-bottom: 1px solid var(--c-ink-100);
  }

  .an-comparison__table th:last-child,
  .an-comparison__table td:last-child {
    border-right: none;
  }

  .an-comparison__table tr:last-child td {
    border-bottom: none;
  }

  /* Feature Column */
  .an-comparison__feature-col,
  .an-comparison__feature-name {
    text-align: left !important;
    font-weight: 500;
    color: var(--c-ink-800);
  }

  .an-comparison__feature-name {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  /* Plan Headers */
  .an-comparison__plan-header {
    background: var(--c-ink-50);
    position: relative;
    vertical-align: top;
    transition: all 0.3s ease;
    cursor: pointer;
  }

  .an-comparison__plan-header--recommended {
    background: var(--c-brand-100);
    transform: scale(1.02);
    box-shadow: 0 0 0 2px var(--c-brand-600);
  }
  
  /* Plan Button */
  .an-comparison__plan-button {
    background: none;
    border: none;
    padding: 0;
    width: 100%;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .an-comparison__plan-button:hover {
    transform: translateY(-2px);
  }
  
  /* Column Highlighting */
  .an-comparison__table--highlight .an-comparison__plan-header,
  .an-comparison__table--highlight .an-comparison__feature-value {
    opacity: 0.5;
    transition: opacity 0.3s ease;
  }
  
  .an-comparison__table--highlight .an-comparison__plan-header.column-active,
  .an-comparison__table--highlight .an-comparison__feature-value.column-active {
    opacity: 1;
    background: var(--c-brand-50);
  }
  
  .an-comparison__table--highlight .an-comparison__plan-header--recommended.column-active {
    background: var(--c-brand-100);
  }

  .an-comparison__badge {
    position: absolute;
    top: -12px;
    left: 50%;
    transform: translateX(-50%);
    background: var(--g-brand);
    color: white;
    padding: 0.25rem 1rem;
    border-radius: 20px;
    font-size: var(--fs-body-xs);
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    white-space: nowrap;
    box-shadow: 0 2px 8px rgba(94, 59, 255, 0.3);
  }

  .an-comparison__plan-name {
    font-size: var(--fs-h3);
    font-weight: 600;
    color: var(--c-ink-900);
    margin-bottom: 0.5rem;
  }

  .an-comparison__plan-price {
    margin-bottom: 0.5rem;
  }

  .an-comparison__price-amount {
    font-size: var(--fs-h2);
    font-weight: 700;
    color: var(--c-brand-600);
  }

  .an-comparison__price-period {
    font-size: var(--fs-body);
    color: var(--c-ink-600);
  }

  .an-comparison__plan-description {
    font-size: var(--fs-body-sm);
    color: var(--c-ink-700);
    margin-bottom: 1rem;
    line-height: 1.4;
  }

  /* Category Rows */
  .an-comparison__category-row td {
    background: var(--c-ink-50);
    padding: 0.75rem 1.5rem;
    text-align: left !important;
  }

  .an-comparison__category-title {
    font-size: var(--fs-body);
    font-weight: 600;
    color: var(--c-ink-700);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin: 0;
  }

  /* Feature Values */
  .an-comparison__feature-value {
    vertical-align: middle;
  }

  .an-comparison__check {
    color: var(--c-accent-teal);
  }

  .an-comparison__x {
    color: var(--c-ink-300);
  }

  .an-comparison__text-value {
    font-size: var(--fs-body);
    color: var(--c-ink-700);
    font-weight: 500;
  }

  /* Enhanced Tooltip */
  .an-comparison__tooltip {
    position: relative;
    background: none;
    border: none;
    color: var(--c-ink-400);
    cursor: help;
    padding: 0;
    margin-left: 0.25rem;
    vertical-align: middle;
  }

  .an-comparison__tooltip:hover {
    color: var(--c-brand-600);
  }

  .an-comparison__tooltip-content {
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%) scale(0.95);
    background: white;
    color: var(--c-ink-900);
    padding: 1rem;
    border-radius: 12px;
    font-size: var(--fs-body-sm);
    opacity: 0;
    visibility: hidden;
    transition: all var(--an-transition-base);
    z-index: 100;
    margin-bottom: 0.75rem;
    min-width: 250px;
    max-width: 320px;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15), 0 0 0 1px rgba(0, 0, 0, 0.05);
  }

  .an-comparison__tooltip:hover .an-comparison__tooltip-content,
  .an-comparison__tooltip:focus .an-comparison__tooltip-content {
    opacity: 1;
    visibility: visible;
    transform: translateX(-50%) scale(1);
  }

  .an-comparison__tooltip-content::after {
    content: '';
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    border: 6px solid transparent;
    border-top-color: white;
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
  }
  
  /* Multimedia Tooltip Content */
  .an-comparison__tooltip-image {
    width: 100%;
    height: auto;
    border-radius: 8px;
    margin-bottom: 0.75rem;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }
  
  .an-comparison__tooltip-text {
    line-height: 1.5;
    margin: 0 0 0.75rem;
    color: var(--c-ink-700);
  }
  
  .an-comparison__tooltip-video {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    background: var(--c-brand-100);
    color: var(--c-brand-800);
    border-radius: 8px;
    text-decoration: none;
    font-weight: 500;
    transition: all 0.2s ease;
    margin-top: 0.5rem;
  }
  
  .an-comparison__tooltip-video:hover {
    background: var(--c-brand-600);
    color: white;
    transform: translateY(-1px);
  }
  
  /* Position adjustments for edge cases */
  @media (max-width: 768px) {
    .an-comparison__tooltip-content {
      left: 0;
      transform: translateX(0) scale(0.95);
    }
    
    .an-comparison__tooltip:hover .an-comparison__tooltip-content {
      transform: translateX(0) scale(1);
    }
  }

  /* Mobile Styles */
  .an-comparison__mobile-plan {
    background: white;
    border-radius: 16px;
    padding: 2rem;
    margin-bottom: 1.5rem;
    box-shadow: 0 4px 12px rgba(26, 45, 78, 0.08);
    position: relative;
  }

  .an-comparison__mobile-plan--recommended {
    box-shadow: 0 0 0 2px var(--c-brand-600), 0 8px 16px rgba(94, 59, 255, 0.15);
  }

  .an-comparison__mobile-header {
    text-align: center;
    padding-bottom: 1.5rem;
    border-bottom: 1px solid var(--c-ink-100);
    margin-bottom: 1.5rem;
  }

  .an-comparison__mobile-category {
    font-size: var(--fs-body-sm);
    font-weight: 600;
    color: var(--c-ink-700);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin: 1.5rem 0 0.75rem;
    padding-top: 1rem;
    border-top: 1px solid var(--c-ink-100);
  }

  .an-comparison__mobile-category:first-child {
    margin-top: 0;
    padding-top: 0;
    border-top: none;
  }

  .an-comparison__mobile-feature {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem 0;
  }

  .an-comparison__mobile-feature-name {
    font-size: var(--fs-body);
    color: var(--c-ink-700);
  }

  .an-comparison__mobile-feature-value {
    font-weight: 500;
  }

  .an-comparison__mobile-cta {
    margin-top: 1.5rem;
    padding-top: 1.5rem;
    border-top: 1px solid var(--c-ink-100);
  }

  .an-comparison__note {
    font-size: var(--fs-body-sm);
    color: var(--c-ink-600);
    font-style: italic;
  }
</style>

{% schema %}
{
  "name": "Content - Comparison Table",
  "elements": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Choose the Right Program for You"
    },
    {
      "type": "textarea",
      "id": "subheading",
      "label": "Subheading",
      "default": "Compare our programs to find the perfect fit for your family's needs"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#FAFAFA"
    },
    {
      "type": "text",
      "id": "bottom_note",
      "label": "Bottom Note",
      "default": "All programs include lifetime access and our 30-day money-back guarantee"
    }
  ],
  "blocks": [
    {
      "type": "plan",
      "name": "Plan/Program",
      "limit": 4,
      "elements": [
        {
          "type": "text",
          "id": "name",
          "label": "Plan Name",
          "default": "Foundation"
        },
        {
          "type": "text",
          "id": "price",
          "label": "Price",
          "default": "197"
        },
        {
          "type": "text",
          "id": "price_period",
          "label": "Price Period",
          "default": "one-time"
        },
        {
          "type": "textarea",
          "id": "description",
          "label": "Short Description",
          "default": "Self-paced learning at your own speed"
        },
        {
          "type": "checkbox",
          "id": "recommended",
          "label": "Recommended Plan",
          "default": false
        },
        {
          "type": "text",
          "id": "badge_text",
          "label": "Badge Text",
          "default": "Most Popular",
          "info": "Shown on recommended plans"
        },
        {
          "type": "text",
          "id": "cta_text",
          "label": "Button Text",
          "default": "Get Started"
        },
        {
          "type": "action",
          "id": "cta_link",
          "label": "Button Link",
          "default": "/checkout"
        }
      ]
    },
    {
      "type": "feature_category",
      "name": "Feature Category",
      "elements": [
        {
          "type": "text",
          "id": "category_name",
          "label": "Category Name",
          "default": "Core Features"
        }
      ]
    },
    {
      "type": "feature",
      "name": "Feature Row",
      "elements": [
        {
          "type": "text",
          "id": "feature_name",
          "label": "Feature Name",
          "default": "Video Modules"
        },
        {
          "type": "text",
          "id": "tooltip",
          "label": "Tooltip Text (optional)",
          "info": "Additional information shown on hover"
        },
        {
          "type": "image_picker",
          "id": "tooltip_image",
          "label": "Tooltip Image (Optional)",
          "info": "Add a thumbnail image to the tooltip"
        },
        {
          "type": "text",
          "id": "tooltip_video",
          "label": "Tooltip Video URL (Optional)",
          "placeholder": "https://youtube.com/watch?v=...",
          "info": "Link to explanation video"
        },
        {
          "type": "text",
          "id": "plan_values",
          "label": "Plan Values (comma-separated)",
          "default": "12 modules, 12 modules, 12+ bonus modules",
          "info": "Use 'check' for checkmark, 'x' for not included, or custom text"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Comparison Table",
      "category": "Content",
      "description": "Compare features across different plans",
      "blocks": [
        {
          "type": "plan",
          "settings": {
            "name": "Foundation",
            "price": "197",
            "price_period": "one-time",
            "description": "Self-paced learning",
            "recommended": false,
            "cta_text": "Get Started",
            "cta_link": "/checkout/foundation"
          }
        },
        {
          "type": "plan",
          "settings": {
            "name": "Guided",
            "price": "497",
            "price_period": "one-time",
            "description": "12-week cohort with live support",
            "recommended": true,
            "badge_text": "Most Popular",
            "cta_text": "Join Cohort",
            "cta_link": "/checkout/guided"
          }
        },
        {
          "type": "plan",
          "settings": {
            "name": "VIP",
            "price": "997",
            "price_period": "one-time",
            "description": "Premium experience with 1-on-1 support",
            "recommended": false,
            "cta_text": "Apply Now",
            "cta_link": "/apply/vip"
          }
        },
        {
          "type": "feature_category",
          "settings": {
            "category_name": "Core Features"
          }
        },
        {
          "type": "feature",
          "settings": {
            "feature_name": "Video Modules",
            "plan_values": "12 modules, 12 modules, 12+ bonus"
          }
        },
        {
          "type": "feature",
          "settings": {
            "feature_name": "Lifetime Access",
            "plan_values": "check, check, check"
          }
        },
        {
          "type": "feature",
          "settings": {
            "feature_name": "Downloadable Worksheets",
            "plan_values": "check, check, check"
          }
        },
        {
          "type": "feature",
          "settings": {
            "feature_name": "Private Community",
            "plan_values": "check, check, check"
          }
        },
        {
          "type": "feature_category",
          "settings": {
            "category_name": "Support & Coaching"
          }
        },
        {
          "type": "feature",
          "settings": {
            "feature_name": "Weekly Live Q&A",
            "tooltip": "Live sessions with Eli Harwood",
            "plan_values": "x, check, check"
          }
        },
        {
          "type": "feature",
          "settings": {
            "feature_name": "Small Group Support",
            "plan_values": "x, check, check"
          }
        },
        {
          "type": "feature",
          "settings": {
            "feature_name": "1-on-1 Coaching Session",
            "plan_values": "x, x, 1 session"
          }
        },
        {
          "type": "feature",
          "settings": {
            "feature_name": "Email Support",
            "plan_values": "x, Standard, Priority"
          }
        },
        {
          "type": "feature_category",
          "settings": {
            "category_name": "Bonuses"
          }
        },
        {
          "type": "feature",
          "settings": {
            "feature_name": "Certificate of Completion",
            "plan_values": "x, check, check"
          }
        },
        {
          "type": "feature",
          "settings": {
            "feature_name": "Signed Book Bundle",
            "plan_values": "x, x, check"
          }
        }
      ]
    }
  ]
}
{% endschema %}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Column Highlighting Feature
    const comparisonTable = document.querySelector('.an-comparison__table');
    const planButtons = document.querySelectorAll('.an-comparison__plan-button');
    let activeColumn = null;
    
    if (comparisonTable && planButtons.length > 0) {
      planButtons.forEach(button => {
        button.addEventListener('click', function(e) {
          e.preventDefault();
          const columnIndex = this.getAttribute('data-column');
          
          // Toggle highlighting
          if (activeColumn === columnIndex) {
            // Remove highlighting
            comparisonTable.classList.remove('an-comparison__table--highlight');
            document.querySelectorAll('.column-active').forEach(el => {
              el.classList.remove('column-active');
            });
            activeColumn = null;
          } else {
            // Add highlighting
            comparisonTable.classList.add('an-comparison__table--highlight');
            
            // Remove previous active classes
            document.querySelectorAll('.column-active').forEach(el => {
              el.classList.remove('column-active');
            });
            
            // Add active class to clicked column
            document.querySelectorAll(`[data-column="${columnIndex}"]`).forEach(el => {
              el.classList.add('column-active');
            });
            
            activeColumn = columnIndex;
          }
        });
      });
    }
    
    // Enhanced Tooltip Interaction
    const tooltips = document.querySelectorAll('.an-comparison__tooltip');
    
    tooltips.forEach(tooltip => {
      // Make tooltips keyboard accessible
      tooltip.setAttribute('tabindex', '0');
      
      // Show tooltip on focus for keyboard users
      tooltip.addEventListener('focus', function() {
        this.classList.add('tooltip-active');
      });
      
      tooltip.addEventListener('blur', function() {
        this.classList.remove('tooltip-active');
      });
      
      // Prevent tooltip from closing when hovering over content
      const content = tooltip.querySelector('.an-comparison__tooltip-content');
      if (content) {
        content.addEventListener('mouseenter', function() {
          tooltip.classList.add('tooltip-active');
        });
        
        content.addEventListener('mouseleave', function() {
          tooltip.classList.remove('tooltip-active');
        });
      }
    });
    
    // Mobile touch support for tooltips
    if ('ontouchstart' in window) {
      tooltips.forEach(tooltip => {
        tooltip.addEventListener('touchstart', function(e) {
          e.preventDefault();
          
          // Close other tooltips
          tooltips.forEach(other => {
            if (other !== tooltip) {
              other.classList.remove('tooltip-active');
            }
          });
          
          // Toggle this tooltip
          this.classList.toggle('tooltip-active');
        });
      });
      
      // Close tooltips when touching outside
      document.addEventListener('touchstart', function(e) {
        if (!e.target.closest('.an-comparison__tooltip')) {
          tooltips.forEach(tooltip => {
            tooltip.classList.remove('tooltip-active');
          });
        }
      });
    }
  });
  
  // Add CSS for tooltip active state
  const style = document.createElement('style');
  style.textContent = `
    .an-comparison__tooltip.tooltip-active .an-comparison__tooltip-content,
    .an-comparison__tooltip:hover .an-comparison__tooltip-content {
      opacity: 1;
      visibility: visible;
      transform: translateX(-50%) scale(1);
    }
  `;
  document.head.appendChild(style);
</script>