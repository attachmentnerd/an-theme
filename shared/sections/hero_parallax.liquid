<style>
  /* CSS Variables for Parallax Hero */
  :root {
    --c-brand-100: #E9E6FF;
    --c-brand-600: #5E3BFF;
    --c-brand-800: #4025E0;
    --c-white: #FFFFFF;
    --g-brand: linear-gradient(135deg, #5E3BFF 0%, #7B5BFF 100%);
    --space-xl: 32px;
    --space-lg: 24px;
    --space-md: 16px;
    --ease: cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Parallax Hero Section */
  #parallax-hero-{{ section.id }}.parallax-hero {
    position: relative;
    width: 100%;
    height: {{ section.settings.height | default: 100 }}vh;
    min-height: {{ section.settings.min_height | default: 600 }}px;
    overflow: hidden;
    display: flex;
    align-items: {{ section.settings.vertical_align | default: 'center' }};
    justify-content: center;
  }

  /* Background Container */
  #parallax-hero-{{ section.id }} .parallax-hero__bg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 120%; /* Extra height for parallax movement */
    z-index: -1;
    will-change: transform;
  }

  /* Background Image */
  #parallax-hero-{{ section.id }} .parallax-hero__image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: {{ section.settings.image_position | default: 'center center' }};
  }

  /* Gradient Overlay */
  #parallax-hero-{{ section.id }} .parallax-hero__overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: {{ section.settings.gradient_height | default: 50 }}%;
    background: linear-gradient(
      to bottom,
      transparent 0%,
      {{ section.settings.gradient_start | default: 'rgba(0, 0, 0, 0)' }} {{ section.settings.gradient_start_pos | default: 0 }}%,
      {{ section.settings.gradient_end | default: 'rgba(0, 0, 0, 0.8)' }} 100%
    );
    pointer-events: none;
  }

  /* Dynamic background support */
  #parallax-hero-{{ section.id }} .dynamic-bg {
    z-index: 1;
  }

  #parallax-hero-{{ section.id }} .parallax-hero__content {
    z-index: 2;
  }

  /* Additional Color Overlay */
  {% assign overlay_opacity = section.settings.overlay_opacity | default: 0 | plus: 0 %}
  {% if section.settings.color_overlay != blank and overlay_opacity > 0 %}
  #parallax-hero-{{ section.id }} .parallax-hero__color-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: {{ section.settings.color_overlay }};
    opacity: {{ overlay_opacity | divided_by: 100.0 }};
    pointer-events: none;
  }
  {% endif %}

  /* Content Container */
  #parallax-hero-{{ section.id }} .parallax-hero__content {
    position: relative;
    z-index: 1;
    width: 100%;
    max-width: {{ section.settings.content_max_width | default: 1200 }}px;
    margin: 0 auto;
    padding: var(--space-xl) var(--space-lg);
    text-align: {{ section.settings.text_align | default: 'center' }};
  }

  /* Typography */
  #parallax-hero-{{ section.id }} .parallax-hero__title {
    font-size: {{ section.settings.title_size | default: 72 }}px;
    font-weight: {{ section.settings.title_weight | default: 700 }};
    line-height: {{ section.settings.title_line_height | default: 1.1 }};
    color: {{ section.settings.title_color | default: '#FFFFFF' }} !important;
    margin-bottom: {{ section.settings.title_margin | default: 24 }}px;
    margin-top: 0;
    {% if section.settings.title_shadow %}
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
    {% endif %}
  }

  #parallax-hero-{{ section.id }} .parallax-hero__subtitle {
    font-size: {{ section.settings.subtitle_size | default: 24 }}px;
    font-weight: {{ section.settings.subtitle_weight | default: 400 }};
    line-height: {{ section.settings.subtitle_line_height | default: 1.5 }};
    color: {{ section.settings.subtitle_color | default: '#FFFFFF' }};
    margin-bottom: {{ section.settings.subtitle_margin | default: 32 }}px;
    opacity: 0.9;
    {% if section.settings.subtitle_shadow %}
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
    {% endif %}
  }

  /* CTA Button */
  #parallax-hero-{{ section.id }} .parallax-hero__cta {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: {{ section.settings.cta_padding_y | default: 16 }}px {{ section.settings.cta_padding_x | default: 32 }}px;
    font-size: {{ section.settings.cta_size | default: 18 }}px;
    font-weight: {{ section.settings.cta_weight | default: 600 }};
    text-decoration: none;
    border-radius: {{ section.settings.cta_radius | default: 9999 }}px;
    transition: all var(--ease);

    {% if section.settings.cta_style == 'gradient' %}
      background: var(--g-brand);
      color: var(--c-white);
      box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.25) inset,
                  0 4px 8px rgba(94, 59, 255, 0.35);
    {% elsif section.settings.cta_style == 'outline' %}
      background: transparent;
      color: {{ section.settings.cta_color | default: '#FFFFFF' }};
      border: 2px solid {{ section.settings.cta_color | default: '#FFFFFF' }};
    {% else %}
      background: {{ section.settings.cta_bg | default: '#5E3BFF' }};
      color: {{ section.settings.cta_color | default: '#FFFFFF' }};
    {% endif %}
  }

  #parallax-hero-{{ section.id }} .parallax-hero__cta:hover {
    transform: translateY(-2px);
    {% if section.settings.cta_style == 'gradient' %}
      box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.25) inset,
                  0 8px 16px rgba(94, 59, 255, 0.4);
    {% elsif section.settings.cta_style == 'outline' %}
      background: {{ section.settings.cta_color | default: '#FFFFFF' }};
      color: {{ section.settings.cta_bg | default: '#000000' }};
    {% else %}
      background: {{ section.settings.cta_bg_hover | default: '#4025E0' }};
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    {% endif %}
  }

  /* Scroll Indicator */
  {% if section.settings.show_scroll_indicator %}
  #parallax-hero-{{ section.id }} .parallax-hero__scroll {
    position: absolute;
    bottom: 30px;
    left: 50%;
    transform: translateX(-50%);
    animation: bounce 2s infinite;
  }

  #parallax-hero-{{ section.id }} .parallax-hero__scroll-icon {
    width: 30px;
    height: 50px;
    border: 2px solid {{ section.settings.scroll_color | default: '#FFFFFF' }};
    border-radius: 25px;
    position: relative;
    opacity: 0.8;
  }

  #parallax-hero-{{ section.id }} .parallax-hero__scroll-icon::before {
    content: '';
    position: absolute;
    top: 8px;
    left: 50%;
    width: 6px;
    height: 6px;
    background: {{ section.settings.scroll_color | default: '#FFFFFF' }};
    border-radius: 50%;
    transform: translateX(-50%);
    animation: scroll 2s infinite;
  }

  @keyframes bounce {
    0%, 20%, 50%, 80%, 100% { transform: translateX(-50%) translateY(0); }
    40% { transform: translateX(-50%) translateY(-10px); }
    60% { transform: translateX(-50%) translateY(-5px); }
  }

  @keyframes scroll {
    0% { top: 8px; opacity: 1; }
    100% { top: 30px; opacity: 0; }
  }
  {% endif %}

  /* Mobile Responsive */
  @media (max-width: 991px) {
    #parallax-hero-{{ section.id }}.parallax-hero {
      height: {{ section.settings.mobile_height | default: 80 }}vh;
      min-height: {{ section.settings.mobile_min_height | default: 500 }}px;
    }

    #parallax-hero-{{ section.id }} .parallax-hero__title {
      font-size: {{ section.settings.mobile_title_size | default: 48 }}px;
    }

    #parallax-hero-{{ section.id }} .parallax-hero__subtitle {
      font-size: {{ section.settings.mobile_subtitle_size | default: 20 }}px;
    }

    #parallax-hero-{{ section.id }} .parallax-hero__cta {
      font-size: {{ section.settings.mobile_cta_size | default: 16 }}px;
      padding: {{ section.settings.mobile_cta_padding_y | default: 14 }}px {{ section.settings.mobile_cta_padding_x | default: 28 }}px;
    }
  }

  @media (max-width: 767px) {
    #parallax-hero-{{ section.id }} .parallax-hero__title {
      font-size: {{ section.settings.mobile_title_size | minus: 12 | default: 36 }}px;
    }

    #parallax-hero-{{ section.id }} .parallax-hero__subtitle {
      font-size: {{ section.settings.mobile_subtitle_size | minus: 2 | default: 18 }}px;
    }

    #parallax-hero-{{ section.id }} .parallax-hero__content {
      padding: var(--space-lg) var(--space-md);
    }
  }
</style>

{% if section.settings.section_id != blank %}<a id="{{ section.settings.section_id | escape }}"></a>{% endif %}
<section class="parallax-hero" id="parallax-hero-{{ section.id }}">
  <!-- Background with Parallax -->
  <div class="parallax-hero__bg" data-parallax-speed="{{ section.settings.parallax_speed | default: 0.5 }}">
    {% if section.settings.background_image != blank %}
      <img src="{{ section.settings.background_image | image_picker_url: '1600x900' }}"
           alt="{{ section.settings.image_alt | default: 'Hero background' }}"
           class="parallax-hero__image"
           loading="eager"
           style="aspect-ratio: 16/9; object-fit: cover; width: 100%; height: 100%;">
    {% else %}
      <div class="parallax-hero__image" style="width: 100%; height: 100%; background: var(--c-brand-100, #E9E6FF); display: flex; align-items: center; justify-content: center;">
        <svg width="200" height="200" viewBox="0 0 200 200" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="20" y="20" width="160" height="160" rx="8" stroke="var(--c-brand-600, #5E3BFF)" stroke-width="2" fill="none" opacity="0.3"/>
          <path d="M60 100L140 100M100 60L100 140" stroke="var(--c-brand-600, #5E3BFF)" stroke-width="2" opacity="0.3" stroke-linecap="round"/>
          <circle cx="100" cy="100" r="30" stroke="var(--c-brand-600, #5E3BFF)" stroke-width="2" fill="none" opacity="0.3"/>
        </svg>
      </div>
    {% endif %}
  </div>

  <!-- Gradient Overlay -->
  {% assign gh = section.settings.gradient_height | default: 50 | plus: 0 %}
  {% if section.settings.show_gradient_overlay and gh > 0 %}
    <div class="parallax-hero__overlay"></div>
  {% endif %}

  <!-- Dynamic Background Effects -->
  {% if section.settings.dynamic_background != 'none' %}
    <div class="dynamic-bg {{ section.settings.dynamic_background }}">
      {% case section.settings.dynamic_background %}
        {% when 'gradient-shift' %}
          <!-- Animated gradient handled by CSS -->
        {% when 'floating-orbs' %}
          <div class="orb-container">
            <div class="floating-orb orb-1"></div>
            <div class="floating-orb orb-2"></div>
            <div class="floating-orb orb-3"></div>
          </div>
        {% when 'morphing-blobs' %}
          <div class="blob-container">
            <div class="morphing-blob" style="width: 500px; height: 500px; top: -200px; left: -200px;"></div>
            <div class="morphing-blob" style="width: 400px; height: 400px; bottom: -100px; right: -100px; animation-delay: -10s;"></div>
          </div>
        {% when 'mesh-gradient' %}
          <div class="mesh-gradient"></div>
        {% when 'aurora' %}
          <div class="aurora-bg">
            <div class="aurora"></div>
          </div>
        {% when 'particles' %}
          <div class="particle-field" id="particles-{{ section.id }}"></div>
      {% endcase %}

      {% if section.settings.add_noise %}
        <div class="noise-overlay"></div>
      {% endif %}
    </div>
  {% endif %}

  <!-- Color Overlay -->
  {% assign overlay_opacity = section.settings.overlay_opacity | default: 0 | plus: 0 %}
  {% if section.settings.color_overlay != blank and overlay_opacity > 0 %}
    <div class="parallax-hero__color-overlay"></div>
  {% endif %}

  <!-- Content -->
  <div class="parallax-hero__content">
    {% if section.settings.title != blank %}
      <h1 class="parallax-hero__title">{{ section.settings.title }}</h1>
    {% endif %}

    {% if section.settings.subtitle != blank %}
      <p class="parallax-hero__subtitle">{{ section.settings.subtitle }}</p>
    {% endif %}

    {% if section.settings.show_cta and section.settings.cta_text != blank %}
      <a href="{{ section.settings.cta_link | default: '#' }}"
         class="parallax-hero__cta"
         {% if section.settings.cta_new_tab %}target="_blank" rel="noopener"{% endif %}>
        {{ section.settings.cta_text }}
        {% if section.settings.cta_arrow %}
          <span>→</span>
        {% endif %}
      </a>
    {% endif %}
  </div>

  <!-- Scroll Indicator -->
  {% if section.settings.show_scroll_indicator %}
    <div class="parallax-hero__scroll">
      <div class="parallax-hero__scroll-icon"></div>
    </div>
  {% endif %}
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const section = document.getElementById('parallax-hero-{{ section.id }}');
    const parallaxBg = section.querySelector('.parallax-hero__bg');
    const speed = parseFloat(parallaxBg.dataset.parallaxSpeed) || 0.5;

    // Only enable parallax on desktop
    if (window.innerWidth > 991) {
      let ticking = false;

      function updateParallax() {
        const scrolled = window.pageYOffset;
        const sectionTop = section.offsetTop;
        const sectionHeight = section.offsetHeight;

        // Check if section is in viewport
        if (scrolled + window.innerHeight > sectionTop && scrolled < sectionTop + sectionHeight) {
          const yPos = -(scrolled - sectionTop) * speed;
          parallaxBg.style.transform = `translateY(${yPos}px)`;
        }

        ticking = false;
      }

      function requestTick() {
        if (!ticking) {
          requestAnimationFrame(updateParallax);
          ticking = true;
        }
      }

      window.addEventListener('scroll', requestTick, { passive: true });

      // Initial position
      updateParallax();
    }
  });
</script>

{% schema %}
{
  "name": "Hero - Parallax",
  "elements": [
    {
      "type": "header",
      "content": "Background"
    },
    {
      "type": "image_picker",
      "id": "background_image",
      "label": "Background Image",
      "info": "Recommended: 2400x1600px or larger"
    },
    {
      "type": "text",
      "id": "image_alt",
      "label": "Image Alt Text",
      "default": "Hero background"
    },
    {
      "type": "select",
      "id": "image_position",
      "label": "Image Position",
      "default": "center center",
      "options": [
        {
          "value": "left top",
          "label": "Left Top"
        },
        {
          "value": "left center",
          "label": "Left Center"
        },
        {
          "value": "left bottom",
          "label": "Left Bottom"
        },
        {
          "value": "center top",
          "label": "Center Top"
        },
        {
          "value": "center center",
          "label": "Center Center"
        },
        {
          "value": "center bottom",
          "label": "Center Bottom"
        },
        {
          "value": "right top",
          "label": "Right Top"
        },
        {
          "value": "right center",
          "label": "Right Center"
        },
        {
          "value": "right bottom",
          "label": "Right Bottom"
        }
      ]
    },
    {
      "type": "range",
      "id": "parallax_speed",
      "label": "Parallax Speed",
      "default": 0.5,
      "min": 0.1,
      "max": 1,
      "step": 0.1,
      "info": "0.1 = slow, 1 = fast"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "height",
      "label": "Height (vh)",
      "default": 100,
      "min": 50,
      "max": 100,
      "step": 5,
      "unit": "vh"
    },
    {
      "type": "range",
      "id": "min_height",
      "label": "Minimum Height (px)",
      "default": 600,
      "min": 400,
      "max": 1000,
      "step": 50,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "mobile_height",
      "label": "Mobile Height (vh)",
      "default": 80,
      "min": 50,
      "max": 100,
      "step": 5,
      "unit": "vh"
    },
    {
      "type": "range",
      "id": "mobile_min_height",
      "label": "Mobile Min Height (px)",
      "default": 500,
      "min": 300,
      "max": 800,
      "step": 50,
      "unit": "px"
    },
    {
      "type": "select",
      "id": "vertical_align",
      "label": "Vertical Alignment",
      "default": "center",
      "options": [
        {
          "value": "flex-start",
          "label": "Top"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "flex-end",
          "label": "Bottom"
        }
      ]
    },
    {
      "type": "select",
      "id": "text_align",
      "label": "Text Alignment",
      "default": "center",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ]
    },
    {
      "type": "range",
      "id": "content_max_width",
      "label": "Content Max Width (px)",
      "default": 1200,
      "min": 600,
      "max": 1600,
      "step": 100,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "Gradient Overlay"
    },
    {
      "type": "checkbox",
      "id": "show_gradient_overlay",
      "label": "Show gradient overlay",
      "default": true
    },
    {
      "type": "range",
      "id": "gradient_height",
      "label": "Gradient Height (%)",
      "default": 50,
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "%"
    },
    {
      "type": "color",
      "id": "gradient_start",
      "label": "Gradient Start Color",
      "default": "rgba(0, 0, 0, 0)"
    },
    {
      "type": "range",
      "id": "gradient_start_pos",
      "label": "Gradient Start Position (%)",
      "default": 0,
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "%"
    },
    {
      "type": "color",
      "id": "gradient_end",
      "label": "Gradient End Color",
      "default": "rgba(0, 0, 0, 0.8)"
    },
    {
      "type": "header",
      "content": "Color Overlay"
    },
    {
      "type": "color",
      "id": "color_overlay",
      "label": "Overlay Color",
      "info": "Additional color overlay on top of image"
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "label": "Overlay Opacity (%)",
      "default": 0,
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "%"
    },
    {
      "type": "header",
      "content": "Dynamic Background Effects"
    },
    {
      "type": "select",
      "id": "dynamic_background",
      "label": "Background Animation",
      "default": "none",
      "options": [
        {
          "label": "None",
          "value": "none"
        },
        {
          "label": "Gradient Shift",
          "value": "gradient-shift"
        },
        {
          "label": "Floating Orbs",
          "value": "floating-orbs"
        },
        {
          "label": "Morphing Blobs",
          "value": "morphing-blobs"
        },
        {
          "label": "Mesh Gradient",
          "value": "mesh-gradient"
        },
        {
          "label": "Aurora Effect",
          "value": "aurora"
        },
        {
          "label": "Particles",
          "value": "particles"
        }
      ],
      "info": "Adds animated elements on top of parallax background"
    },
    {
      "type": "checkbox",
      "id": "add_noise",
      "label": "Add Noise Texture",
      "default": false,
      "info": "Adds subtle grain texture overlay"
    },
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Welcome to Our World"
    },
    {
      "type": "textarea",
      "id": "subtitle",
      "label": "Subtitle",
      "default": "Discover amazing experiences that transform your perspective"
    },
    {
      "type": "header",
      "content": "Title Styling"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title Color",
      "default": "#FFFFFF"
    },
    {
      "type": "range",
      "id": "title_size",
      "label": "Title Size (px)",
      "default": 72,
      "min": 24,
      "max": 120,
      "step": 2,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "mobile_title_size",
      "label": "Mobile Title Size (px)",
      "default": 48,
      "min": 24,
      "max": 72,
      "step": 2,
      "unit": "px"
    },
    {
      "type": "select",
      "id": "title_weight",
      "label": "Title Font Weight",
      "default": "700",
      "options": [
        {
          "value": "300",
          "label": "Light"
        },
        {
          "value": "400",
          "label": "Regular"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semi-Bold"
        },
        {
          "value": "700",
          "label": "Bold"
        },
        {
          "value": "800",
          "label": "Extra Bold"
        }
      ]
    },
    {
      "type": "range",
      "id": "title_line_height",
      "label": "Title Line Height",
      "default": 1.1,
      "min": 0.8,
      "max": 2,
      "step": 0.1
    },
    {
      "type": "range",
      "id": "title_margin",
      "label": "Title Bottom Margin (px)",
      "default": 24,
      "min": 0,
      "max": 80,
      "step": 4,
      "unit": "px"
    },
    {
      "type": "checkbox",
      "id": "title_shadow",
      "label": "Title Text Shadow",
      "default": false
    },
    {
      "type": "header",
      "content": "Subtitle Styling"
    },
    {
      "type": "color",
      "id": "subtitle_color",
      "label": "Subtitle Color",
      "default": "#FFFFFF"
    },
    {
      "type": "range",
      "id": "subtitle_size",
      "label": "Subtitle Size (px)",
      "default": 24,
      "min": 14,
      "max": 48,
      "step": 2,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "mobile_subtitle_size",
      "label": "Mobile Subtitle Size (px)",
      "default": 20,
      "min": 14,
      "max": 32,
      "step": 2,
      "unit": "px"
    },
    {
      "type": "select",
      "id": "subtitle_weight",
      "label": "Subtitle Font Weight",
      "default": "400",
      "options": [
        {
          "value": "300",
          "label": "Light"
        },
        {
          "value": "400",
          "label": "Regular"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semi-Bold"
        }
      ]
    },
    {
      "type": "range",
      "id": "subtitle_line_height",
      "label": "Subtitle Line Height",
      "default": 1.5,
      "min": 1,
      "max": 2,
      "step": 0.1
    },
    {
      "type": "range",
      "id": "subtitle_margin",
      "label": "Subtitle Bottom Margin (px)",
      "default": 32,
      "min": 0,
      "max": 80,
      "step": 4,
      "unit": "px"
    },
    {
      "type": "checkbox",
      "id": "subtitle_shadow",
      "label": "Subtitle Text Shadow",
      "default": false
    },
    {
      "type": "header",
      "content": "Call to Action"
    },
    {
      "type": "checkbox",
      "id": "show_cta",
      "label": "Show CTA Button",
      "default": true
    },
    {
      "type": "text",
      "id": "cta_text",
      "label": "Button Text",
      "default": "Get Started"
    },
    {
      "type": "text",
      "id": "cta_link",
      "label": "Button Link",
      "default": "#"
    },
    {
      "type": "checkbox",
      "id": "cta_new_tab",
      "label": "Open in New Tab",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "cta_arrow",
      "label": "Show Arrow",
      "default": true
    },
    {
      "type": "select",
      "id": "cta_style",
      "label": "Button Style",
      "default": "gradient",
      "options": [
        {
          "value": "gradient",
          "label": "Gradient"
        },
        {
          "value": "solid",
          "label": "Solid"
        },
        {
          "value": "outline",
          "label": "Outline"
        }
      ]
    },
    {
      "type": "color",
      "id": "cta_bg",
      "label": "Button Background",
      "default": "#5E3BFF",
      "info": "For solid style"
    },
    {
      "type": "color",
      "id": "cta_bg_hover",
      "label": "Button Hover Background",
      "default": "#4025E0",
      "info": "For solid style"
    },
    {
      "type": "color",
      "id": "cta_color",
      "label": "Button Text Color",
      "default": "#FFFFFF"
    },
    {
      "type": "range",
      "id": "cta_size",
      "label": "Button Font Size (px)",
      "default": 18,
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "mobile_cta_size",
      "label": "Mobile Button Size (px)",
      "default": 16,
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px"
    },
    {
      "type": "select",
      "id": "cta_weight",
      "label": "Button Font Weight",
      "default": "600",
      "options": [
        {
          "value": "400",
          "label": "Regular"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semi-Bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ]
    },
    {
      "type": "range",
      "id": "cta_padding_x",
      "label": "Button Padding X (px)",
      "default": 32,
      "min": 16,
      "max": 64,
      "step": 4,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "cta_padding_y",
      "label": "Button Padding Y (px)",
      "default": 16,
      "min": 8,
      "max": 32,
      "step": 2,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "mobile_cta_padding_x",
      "label": "Mobile Button Padding X (px)",
      "default": 28,
      "min": 16,
      "max": 48,
      "step": 4,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "mobile_cta_padding_y",
      "label": "Mobile Button Padding Y (px)",
      "default": 14,
      "min": 8,
      "max": 24,
      "step": 2,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "cta_radius",
      "label": "Button Border Radius (px)",
      "default": 9999,
      "min": 0,
      "max": 9999,
      "step": 4,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "Scroll Indicator"
    },
    {
      "type": "checkbox",
      "id": "show_scroll_indicator",
      "label": "Show Scroll Indicator",
      "default": true
    },
    {
      "type": "color",
      "id": "scroll_color",
      "label": "Scroll Indicator Color",
      "default": "#FFFFFF"
    }
  ],
  "presets": [
    {
      "name": "Hero - Parallax",
      "description": "Full-screen hero with parallax background",
      "category": "Hero"
    }
  ]
}
{% endschema %}
