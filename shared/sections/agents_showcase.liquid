<section class="agents-showcase-section py-5" style="background-color: {{ section.settings.bg_color | default: '#f8f8f8' }};">
  <div class="container">
    <!-- Header -->
    <div class="text-center mb-5">
      <h2 class="agents-showcase__title" style="font-size: var(--fs-display); color: var(--c-ink-900); font-weight: 500;">
        {{ section.settings.title | default: 'Agents that scale across every workflow' }}
      </h2>
    </div>

    <!-- Tabs and Content Container -->
    <div class="agents-showcase__container">
      <div class="row">
        <!-- Tabs Column -->
        <div class="col-lg-4 mb-4 mb-lg-0">
          <div class="agents-showcase__tabs" role="tablist">
            {% for block in section.blocks %}
              <div class="agents-showcase__tab {% if forloop.first %}active{% endif %}" 
                   data-tab-index="{{ forloop.index0 }}"
                   role="tab"
                   aria-selected="{% if forloop.first %}true{% else %}false{% endif %}"
                   tabindex="{% if forloop.first %}0{% else %}-1{% endif %}">
                <div class="tab-number">{{ block.settings.tab_number | default: forloop.index | prepend: '0' }}</div>
                <div class="tab-title">{{ block.settings.tab_title }}</div>
              </div>
            {% endfor %}
          </div>
        </div>

        <!-- Content Column -->
        <div class="col-lg-8">
          <div class="agents-showcase__content" id="agents-content-{{ section.id }}">
            {% for block in section.blocks %}
              <div class="agents-showcase__panel {% if forloop.first %}active{% endif %}" 
                   data-panel-index="{{ forloop.index0 }}"
                   data-panel-bg="{{ block.settings.panel_bg_color | default: '#ffffff' }}"
                   role="tabpanel">
                <div class="panel-card" style="background-color: {{ block.settings.card_bg_color | default: '#e8f5e8' }};">
                  <!-- Panel Header -->
                  <div class="panel-header">
                    <h3 class="panel-title">{{ block.settings.panel_title }}</h3>
                    {% if block.settings.show_cta %}
                      <a href="{{ block.settings.cta_url }}" 
                         class="btn btn-dark panel-cta"
                         {% if block.settings.cta_new_tab %}target="_blank" rel="noopener"{% endif %}>
                        {{ block.settings.cta_text | default: 'Try it now' }}
                      </a>
                    {% endif %}
                  </div>

                  <!-- Panel Description -->
                  <div class="panel-description">
                    {{ block.settings.description }}
                  </div>

                  <!-- Panel Image/Content -->
                  {% if block.settings.content_image %}
                    <div class="panel-image-container mt-4">
                      {% render 'responsive-image',
                        image: block.settings.content_image,
                        alt: block.settings.image_alt,
                        class: 'panel-image',
                        sizes: '(max-width: 767px) 100vw, 66vw',
                        aspect_ratio: '16/9'
                      %}
                    </div>
                  {% endif %}

                  <!-- Optional Additional Content -->
                  {% if block.settings.additional_content %}
                    <div class="panel-additional-content mt-3">
                      {{ block.settings.additional_content }}
                    </div>
                  {% endif %}
                </div>
              </div>
            {% endfor %}
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .agents-showcase-section {
    overflow: hidden;
  }

  .agents-showcase__title {
    margin-bottom: 0;
    line-height: 1.2;
  }

  /* Tabs Styling */
  .agents-showcase__tabs {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .agents-showcase__tab {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem 1.5rem;
    background: transparent;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: all var(--an-transition-base);
    position: relative;
    overflow: hidden;
  }

  .agents-showcase__tab::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 3px;
    background: transparent;
    transition: background var(--an-transition-base);
  }

  .agents-showcase__tab:hover {
    background: rgba(0, 0, 0, 0.02);
  }

  .agents-showcase__tab.active {
    background: rgba(0, 0, 0, 0.03);
  }

  .agents-showcase__tab.active::before {
    background: var(--c-brand-600);
  }

  .tab-number {
    font-size: 1.25rem;
    font-weight: 600;
    color: #999;
    min-width: 2.5rem;
  }

  .agents-showcase__tab.active .tab-number {
    color: var(--c-brand-600);
  }

  .tab-title {
    font-size: 1rem;
    color: var(--c-ink-700);
    font-weight: 500;
  }

  .agents-showcase__tab.active .tab-title {
    color: var(--c-ink-900);
  }

  /* Content Panels */
  .agents-showcase__content {
    position: relative;
    min-height: 400px;
    background-color: #ffffff;
    border-radius: 16px;
    padding: 1.5rem;
    transition: background-color 0.4s ease;
  }

  .agents-showcase__panel {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.4s ease, visibility 0.4s ease;
  }

  .agents-showcase__panel.active {
    opacity: 1;
    visibility: visible;
    position: relative;
  }

  .panel-card {
    padding: 2.5rem;
    border-radius: 12px;
    height: 100%;
    min-height: 350px;
    display: flex;
    flex-direction: column;
  }

  .panel-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 1.5rem;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .panel-title {
    font-size: 2rem;
    font-weight: 500;
    color: var(--c-ink-900);
    margin: 0;
    line-height: 1.3;
    flex: 1;
  }

  .panel-cta {
    background: #1a1a1a;
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 50px;
    font-weight: 500;
    transition: all var(--an-transition-base);
    white-space: nowrap;
  }

  .panel-cta:hover {
    background: #000;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .panel-description {
    font-size: 1.125rem;
    line-height: 1.6;
    color: var(--c-ink-700);
    margin-bottom: 1.5rem;
  }

  .panel-image-container {
    margin-top: auto;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  }

  .panel-image {
    width: 100%;
    height: auto;
    display: block;
  }

  .panel-additional-content {
    font-size: 0.9rem;
    color: var(--c-ink-600);
    line-height: 1.5;
  }

  /* Auto-scroll indicator */
  .agents-showcase__tab::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background: var(--c-brand-600);
    transition: width linear;
    opacity: 0;
  }

  .agents-showcase__tab.active.auto-scrolling::after {
    opacity: 1;
    width: 100%;
    transition-duration: var(--scroll-duration, 5s);
  }

  /* Mobile Responsive */
  @media (max-width: 991px) {
    .agents-showcase__tabs {
      flex-direction: row;
      overflow-x: auto;
      -webkit-overflow-scrolling: touch;
      scrollbar-width: none;
      -ms-overflow-style: none;
      padding-bottom: 1rem;
      margin-bottom: 1.5rem;
    }

    .agents-showcase__tabs::-webkit-scrollbar {
      display: none;
    }

    .agents-showcase__tab {
      flex: 0 0 auto;
      white-space: nowrap;
    }

    .agents-showcase__tab::before {
      display: none;
    }

    .agents-showcase__tab.active {
      background: var(--c-brand-100);
    }

    .agents-showcase__content {
      padding: 1rem;
    }

    .panel-card {
      padding: 1.5rem;
      min-height: 350px;
    }

    .panel-title {
      font-size: 1.5rem;
    }

    .panel-description {
      font-size: 1rem;
    }

    .tab-number {
      font-size: 1rem;
    }

    .tab-title {
      font-size: 0.9rem;
    }
  }

  @media (max-width: 767px) {
    .panel-header {
      flex-direction: column;
      align-items: flex-start;
    }

    .panel-cta {
      width: 100%;
      text-align: center;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const section = document.querySelector('.agents-showcase-section');
    if (!section) return;

    const tabs = section.querySelectorAll('.agents-showcase__tab');
    const panels = section.querySelectorAll('.agents-showcase__panel');
    const autoScrollDelay = {{ section.settings.auto_scroll_delay | default: 5000 }};
    const enableAutoScroll = {{ section.settings.enable_auto_scroll | default: true }};
    
    let currentIndex = 0;
    let autoScrollInterval;
    let isPaused = false;

    // Function to switch tabs
    function switchTab(index) {
      // Remove active class from all tabs and panels
      tabs.forEach(tab => {
        tab.classList.remove('active', 'auto-scrolling');
        tab.setAttribute('aria-selected', 'false');
        tab.setAttribute('tabindex', '-1');
      });
      panels.forEach(panel => panel.classList.remove('active'));

      // Add active class to current tab and panel
      if (tabs[index] && panels[index]) {
        tabs[index].classList.add('active');
        tabs[index].setAttribute('aria-selected', 'true');
        tabs[index].setAttribute('tabindex', '0');
        panels[index].classList.add('active');
        
        // Update content background color
        const contentArea = document.getElementById('agents-content-{{ section.id }}');
        const panelBgColor = panels[index].getAttribute('data-panel-bg');
        if (contentArea && panelBgColor) {
          contentArea.style.backgroundColor = panelBgColor;
        }
        
        // Add auto-scrolling class for progress indicator
        if (enableAutoScroll && !isPaused) {
          tabs[index].classList.add('auto-scrolling');
          tabs[index].style.setProperty('--scroll-duration', autoScrollDelay + 'ms');
        }
      }
    }

    // Function to go to next tab
    function nextTab() {
      currentIndex = (currentIndex + 1) % tabs.length;
      switchTab(currentIndex);
    }

    // Set up auto-scroll
    function startAutoScroll() {
      if (!enableAutoScroll) return;
      
      // Add initial auto-scrolling class
      if (tabs[0]) {
        tabs[0].classList.add('auto-scrolling');
        tabs[0].style.setProperty('--scroll-duration', autoScrollDelay + 'ms');
      }
      
      autoScrollInterval = setInterval(() => {
        if (!isPaused) {
          nextTab();
        }
      }, autoScrollDelay);
    }

    // Stop auto-scroll
    function stopAutoScroll() {
      clearInterval(autoScrollInterval);
      tabs.forEach(tab => tab.classList.remove('auto-scrolling'));
    }

    // Handle tab clicks
    tabs.forEach((tab, index) => {
      tab.addEventListener('click', () => {
        currentIndex = index;
        switchTab(index);
        
        // Reset auto-scroll on manual interaction
        if (enableAutoScroll) {
          stopAutoScroll();
          isPaused = true;
          
          // Resume after a delay
          setTimeout(() => {
            isPaused = false;
            startAutoScroll();
          }, autoScrollDelay * 2);
        }
      });

      // Keyboard navigation
      tab.addEventListener('keydown', (e) => {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault();
          tab.click();
        }
      });
    });

    // Pause on hover
    section.addEventListener('mouseenter', () => {
      isPaused = true;
      tabs.forEach(tab => tab.classList.remove('auto-scrolling'));
    });

    section.addEventListener('mouseleave', () => {
      isPaused = false;
      if (tabs[currentIndex] && enableAutoScroll) {
        tabs[currentIndex].classList.add('auto-scrolling');
        tabs[currentIndex].style.setProperty('--scroll-duration', autoScrollDelay + 'ms');
      }
    });

    // Initialize first panel background color
    if (panels[0]) {
      const contentArea = document.getElementById('agents-content-{{ section.id }}');
      const firstPanelBg = panels[0].getAttribute('data-panel-bg');
      if (contentArea && firstPanelBg) {
        contentArea.style.backgroundColor = firstPanelBg;
      }
    }

    // Start auto-scroll
    if (enableAutoScroll) {
      startAutoScroll();
    }

    // Clean up on page unload
    window.addEventListener('beforeunload', stopAutoScroll);
  });
</script>

{% schema %}
{
  "name": "Content - Agents Showcase",
  "class": "agents-showcase",
  "elements": [
    {
      "type": "text",
      "id": "title",
      "label": "Section Title",
      "default": "Agents that scale across every workflow"
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "Background Color",
      "default": "#f8f8f8"
    },
    {
      "type": "checkbox",
      "id": "enable_auto_scroll",
      "label": "Enable Auto-scroll",
      "default": true
    },
    {
      "type": "range",
      "id": "auto_scroll_delay",
      "label": "Auto-scroll Delay (ms)",
      "min": 3000,
      "max": 10000,
      "step": 500,
      "default": 5000,
      "unit": "ms"
    }
  ],
  "blocks": [
    {
      "type": "agent_tab",
      "name": "Agent Tab",
      "elements": [
        {
          "type": "text",
          "id": "tab_number",
          "label": "Tab Number",
          "default": "01"
        },
        {
          "type": "text",
          "id": "tab_title",
          "label": "Tab Title",
          "default": "Document analysis agents"
        },
        {
          "type": "text",
          "id": "panel_title",
          "label": "Panel Title",
          "default": "Read 10,000 documents and extract critical insights in seconds"
        },
        {
          "type": "textarea",
          "id": "description",
          "label": "Description",
          "default": "Scan contracts, invoices, and reports for red flags and hidden gems. Turn documents into structured and actionable data in Airtable."
        },
        {
          "type": "checkbox",
          "id": "show_cta",
          "label": "Show CTA Button",
          "default": true
        },
        {
          "type": "text",
          "id": "cta_text",
          "label": "CTA Button Text",
          "default": "Try it now"
        },
        {
          "type": "text",
          "id": "cta_url",
          "label": "CTA URL",
          "default": "#"
        },
        {
          "type": "checkbox",
          "id": "cta_new_tab",
          "label": "Open CTA in New Tab",
          "default": false
        },
        {
          "type": "image_picker",
          "id": "content_image",
          "label": "Content Image",
          "info": "Upload an image to display in the panel"
        },
        {
          "type": "text",
          "id": "image_alt",
          "label": "Image Alt Text",
          "default": "Agent showcase image"
        },
        {
          "type": "color",
          "id": "panel_bg_color",
          "label": "Panel Background Color",
          "default": "#ffffff",
          "info": "Background color for the entire content area when this tab is active"
        },
        {
          "type": "color",
          "id": "card_bg_color",
          "label": "Card Background Color",
          "default": "#e8f5e8"
        },
        {
          "type": "textarea",
          "id": "additional_content",
          "label": "Additional Content",
          "info": "Optional additional text below the image"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Agents Showcase",
      "category": "Content",
      "description": "Showcase different agent capabilities with auto-scrolling tabs",
      "blocks": [
        {
          "type": "agent_tab",
          "settings": {
            "tab_number": "01",
            "tab_title": "Document analysis agents",
            "panel_title": "Read 10,000 documents and extract critical insights in seconds",
            "description": "Scan contracts, invoices, and reports for red flags and hidden gems. Turn documents into structured and actionable data in Airtable.",
            "show_cta": true,
            "cta_text": "Try it now",
            "panel_bg_color": "#f0fdf0",
            "card_bg_color": "#e8f5e8"
          }
        },
        {
          "type": "agent_tab",
          "settings": {
            "tab_number": "02",
            "tab_title": "Web search agents",
            "panel_title": "Research any topic across millions of web pages instantly",
            "description": "Get comprehensive research reports with citations and summaries. Perfect for market research, competitor analysis, and trend tracking.",
            "show_cta": true,
            "cta_text": "Try it now",
            "panel_bg_color": "#f0f9ff",
            "card_bg_color": "#e6f3ff"
          }
        },
        {
          "type": "agent_tab",
          "settings": {
            "tab_number": "03",
            "tab_title": "Image generation agents",
            "panel_title": "Create stunning visuals from text descriptions",
            "description": "Generate professional images, illustrations, and graphics on demand. Perfect for marketing materials, presentations, and creative projects.",
            "show_cta": true,
            "cta_text": "Try it now",
            "panel_bg_color": "#fff0f7",
            "card_bg_color": "#ffe6f0"
          }
        },
        {
          "type": "agent_tab",
          "settings": {
            "tab_number": "04",
            "tab_title": "Custom agents",
            "panel_title": "Build custom AI agents tailored to your workflow",
            "description": "Create specialized agents that understand your business processes and automate repetitive tasks with precision and intelligence.",
            "show_cta": true,
            "cta_text": "Try it now",
            "panel_bg_color": "#f7f0ff",
            "card_bg_color": "#f0e6ff"
          }
        }
      ]
    }
  ]
}
{% endschema %}